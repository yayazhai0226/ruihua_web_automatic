{"name": "test_002", "status": "broken", "statusDetails": {"message": "TypeError: test_002() takes 0 positional arguments but 1 was given", "trace": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x000002728221EF70>, when = 'call', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\nD:\\tools\\Python\\Python39\\lib\\site-packages\\_pytest\\runner.py:311: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nD:\\tools\\Python\\Python39\\lib\\site-packages\\_pytest\\runner.py:255: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nD:\\tools\\Python\\Python39\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\tools\\Python\\Python39\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\tools\\Python\\Python39\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\nD:\\tools\\Python\\Python39\\lib\\site-packages\\_pytest\\runner.py:170: in pytest_runtest_call\n    raise e\nD:\\tools\\Python\\Python39\\lib\\site-packages\\_pytest\\runner.py:162: in pytest_runtest_call\n    item.runtest()\nD:\\tools\\Python\\Python39\\lib\\site-packages\\_pytest\\python.py:1641: in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\nD:\\tools\\Python\\Python39\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\tools\\Python\\Python39\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\tools\\Python\\Python39\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npyfuncitem = <Function test_002>\n\n    @hookimpl(trylast=True)\n    def pytest_pyfunc_call(pyfuncitem: \"Function\") -> Optional[object]:\n        testfunction = pyfuncitem.obj\n        if is_async_function(testfunction):\n            async_warn_and_skip(pyfuncitem.nodeid)\n        funcargs = pyfuncitem.funcargs\n        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}\n>       result = testfunction(**testargs)\nE       TypeError: test_002() takes 0 positional arguments but 1 was given\n\nD:\\tools\\Python\\Python39\\lib\\site-packages\\_pytest\\python.py:183: TypeError"}, "start": 1614153016276, "stop": 1614153016277, "uuid": "9dd24ec0-f188-4ac4-8981-4673f3b1d5c4", "historyId": "e011fdf21c92249dacc1451022a8580b", "testCaseId": "7531229bb6db9d9382e094489db5dcc7", "fullName": "testcase.test_case.Test_Cases#test_002", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "Test_Cases"}, {"name": "host", "value": "DESKTOP-ACNE1LV"}, {"name": "thread", "value": "17268-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_case"}]}